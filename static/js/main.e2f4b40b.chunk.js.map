{"version":3,"sources":["components/entete/entete.js","components/corps/menu/menu.js","components/corps/rech_image/recherche/recherche.js","components/corps/rech_image/ElemImage/ElemImage.js","components/corps/rech_image/rech_img.js","components/corps/corps.js","App.js","serviceWorker.js","index.js"],"names":["Entete","src","alt","className","height","width","Menu","href","Recherche","type","name","ElemImage","props","img","title","desc","RechImg","Corps","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qUAYeA,MAVf,WACI,OACI,6BAEI,iCAAO,yBAAKC,IAAI,YAAYC,IAAI,cAAcC,UAAU,QAAOC,OAAO,OAAOC,MAAM,Y,MCchFC,MAlBf,WACI,OACI,yBAAKH,UAAU,QACZ,oCACA,6BACA,4BACT,4BAAI,uBAAGI,KAAK,QAAR,UACJ,4BAAI,uBAAGA,KAAK,SAAR,UACJ,4BAAI,uBAAGA,KAAK,WAAR,yBACJ,4BAAI,uBAAGA,KAAK,WAAR,uBACJ,4BAAI,uBAAGA,KAAK,WAAR,gBACJ,4BAAI,uBAAGA,KAAK,YAAR,aACJ,4BAAI,uBAAGA,KAAK,UAAR,c,YCFSC,MAVf,WAEI,OACI,uBAAGL,UAAU,aAAb,eACgB,6BAChB,2BAAOM,KAAK,OAAOC,KAAK,YAFxB,IAEoC,6BACpC,4BAAQA,KAAK,WAAb,c,MCKOC,MAVf,SAAmBC,GACf,OACI,yBAAKT,UAAU,WAEf,6BAAK,yBAAKF,IAAKW,EAAMC,IAAKX,IAAKU,EAAME,MAAOV,OAAO,MAAKC,MAAM,SAC9D,6BAAMO,EAAME,OACZ,6BAAMF,EAAMG,QCQLC,MAbf,WACI,OACI,yBAAKb,UAAU,WAEb,kBAAE,EAAF,MACD,yBAAKA,UAAU,SACZ,kBAAE,EAAF,CAAYU,IAAI,SAASC,MAAM,SAASC,KAAK,0BAC7C,kBAAE,EAAF,CAAYF,IAAI,SAASC,MAAM,SAASC,KAAK,0BAC7C,kBAAE,EAAF,CAAYF,IAAI,SAASC,MAAM,SAASC,KAAK,6B,MCE1CE,MATf,WACI,OACI,yBAAKd,UAAU,SACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCUIe,MATf,WAEE,OACE,6BACA,iCAAM,kBAAC,EAAD,OACR,6BAAK,kBAAC,EAAD,SCHaC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e2f4b40b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './entete.css';\r\nfunction Entete(){\r\n    return(\r\n        <div >\r\n          \r\n            <div > <img src=\"image.jpg\" alt=\"Smiley face\" className=\"image\"height='auto' width='1346'></img></div>  \r\n           \r\n          \r\n        </div>\r\n    )\r\n}\r\nexport default Entete ;","import React from 'react';\r\nimport './menu.css';\r\nfunction Menu(){\r\n    return(\r\n        <div className=\"menu\">\r\n           <b>Menu </b>\r\n           <hr/>\r\n           <ul>\r\n  <li><a href=\"#Hom\"> Home</a></li>\r\n  <li><a href=\"#News\"> News</a></li>\r\n  <li><a href=\"#ListeT\"> Liste des tournois </a></li>\r\n  <li><a href=\"#ListeJ\"> Liste des joueurs</a></li>\r\n  <li><a href=\"#ListeE\"> Evenements</a></li>\r\n  <li><a href=\"#Contact\"> Contact</a></li>\r\n  <li><a href=\"#About\"> About</a></li>\r\n</ul>\r\n          \r\n        </div>\r\n    )\r\n}\r\nexport default Menu;","import React from 'react';\r\nimport './recherche.css';\r\nfunction Recherche(){\r\n   \r\n    return (\r\n        <p className=\"recherche\">\r\n            Rechercher  <bq/> \r\n        <input type=\"text\" name=\"nomrech\"/> <bq/>\r\n        <button name=\"valider\"> valider</button>\r\n        </p>\r\n        )\r\n}\r\nexport default Recherche ;","import React from 'react';\r\nimport './ElemImage.css';\r\n\r\nfunction ElemImage(props){\r\n    return(\r\n        <div className=\"listImg\">\r\n         \r\n        <div><img src={props.img} alt={props.title} height=\"150\"width=\"150\"></img></div> \r\n        <div>{props.title}</div>\r\n        <div>{props.desc}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default ElemImage ;","import React from 'react';\r\nimport './rech_img.css';\r\nimport  Recherche from './recherche/recherche';\r\nimport  ElemImage from './ElemImage/ElemImage'\r\nfunction RechImg(){\r\n    return(\r\n        <div className=\"rechImg\">\r\n         \r\n          < Recherche/>\r\n         <div className=\"liste\"> \r\n            < ElemImage img=\"i1.jpg\" title=\"Event1\" desc=\"this is description 1\"/>\r\n            < ElemImage img=\"i2.jpg\" title=\"Event2\" desc=\"this is description 2\"/>\r\n            < ElemImage img=\"i3.jpg\" title=\"Event3\" desc=\"this is description 3\"/>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\nexport default RechImg ;","import React from 'react';\r\nimport Menu from './menu/menu';\r\nimport RechImg from './rech_image/rech_img';\r\nimport './corps.css';\r\n\r\nfunction Corps(){\r\n    return(\r\n        <div className=\"corps\">\r\n           <Menu/>\r\n           <RechImg/>\r\n          \r\n        </div>\r\n    )\r\n}\r\nexport default Corps;","import React from 'react';\n\nimport Entete from './components/entete/entete';\nimport Corps from './components/corps/corps';\n\n\nimport './App.css';\n  \n\n\nfunction App() {\n\n  return (\n    <div >\n    <div> <Entete/></div>\n  <div><Corps/></div>\n    </div>\n  )\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}